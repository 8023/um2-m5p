# X轴 - 42步进电机
[stepper_x]
step_pin: PC8
dir_pin: !PC9
enable_pin: !PA15
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PD3
position_endstop: 0
position_max: 220
homing_speed: 100
homing_retract_dist: 10
second_homing_speed: 10

[tmc2209 stepper_x]
uart_pin: PD9
run_current: 1.2
stealthchop_threshold: 99999

# Y轴 - 42步进电机
[stepper_y]
step_pin: PA10
dir_pin: PA14
enable_pin: !PA13
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PD2
position_endstop: 220
position_max: 220
homing_speed: 100
homing_retract_dist: 10
second_homing_speed: 10

[tmc2209 stepper_y]
uart_pin: PD8
run_current: 1.2
stealthchop_threshold: 99999

# Z轴 - 42步进电机
[stepper_z]
step_pin: PC6
dir_pin: !PC7
enable_pin: !PA9
microsteps: 16
rotation_distance: 8
endstop_pin: ^!PC3
position_endstop: 313
position_max: 313
homing_speed: 20
homing_retract_dist: 5
second_homing_speed: 5

[tmc2209 stepper_z]
uart_pin: PB10
run_current: 1.2
stealthchop_threshold: 99999

# 左E轴 - 42步进挤出机
[extruder]
step_pin: PB12
dir_pin: !PB11
enable_pin: !PA8
microsteps: 16
rotation_distance: 8.672
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA7
sensor_type: MAX31865
sensor_pin: PB9
spi_bus: spi2
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2
control = pid
pid_kp = 19.596
pid_ki = 1.232
pid_kd = 77.893
min_temp: 0
max_temp: 320
min_extrude_temp: 0

[tmc2209 extruder]
uart_pin: PB2
run_current: 1.25
stealthchop_threshold: 99999

# 右E轴 - 42步进挤出机
[extruder1]
step_pin: PB0
dir_pin: !PB1
enable_pin: !PC4
microsteps: 16
rotation_distance: 8.672
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC5
sensor_type: MAX31865
sensor_pin: PB8
spi_bus: spi2
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2
control = pid
pid_kp = 21.992
pid_ki = 1.496
pid_kd = 80.820
min_temp: 0
max_temp: 320
min_extrude_temp: 0

[tmc2209 extruder1]
uart_pin: PA6
run_current: 1.25
stealthchop_threshold: 99999

[heater_bed]
heater_pin: PA5
control = pid
pid_kp = 53.953
pid_ki = 1.040
pid_kd = 700.040
min_temp: -10
max_temp: 130
sensor_type: MAX31865
sensor_pin: PC0
spi_bus: spi2
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2

[fan]
pin: PA3

[heater_fan fan1]
pin: PA4
heater: extruder, extruder1

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_4A0025000D504B5735313920-if00
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 25
max_z_accel: 100

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes

[mcu host]
serial: /tmp/klipper_host_mcu

[led case]
white_pin: host: gpio79
initial_WHITE: 0.5

[display_status]

[pause_resume]

[exclude_object]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float / 2.0 %}
    {% set y_park = 1 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 5.0) %}
        {% set z_safe = 5.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{E} F1200
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
        G1 Z{z_safe} F600
        G90
        G1 X{x_park} Y{y_park} F6000
    {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
        {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G91
        G1 E{E} F1200
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    G90
    G1 Z313 F1200
    G1 X110 Y1 F6000
    


    